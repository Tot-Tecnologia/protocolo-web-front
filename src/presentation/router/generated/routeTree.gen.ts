/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './../routes/__root'
import { Route as SolicitarProtocoloImport } from './../routes/solicitarProtocolo'
import { Route as RecuperarSenhaImport } from './../routes/recuperarSenha'
import { Route as LoginImport } from './../routes/login'
import { Route as EmailDeRecuperacaoEnviadoImport } from './../routes/emailDeRecuperacaoEnviado'
import { Route as ConsultarUsuariosImport } from './../routes/consultarUsuarios'
import { Route as ConsultarProtocolosImport } from './../routes/consultarProtocolos'
import { Route as CadastroServidorImport } from './../routes/cadastroServidor'
import { Route as CadastroImport } from './../routes/cadastro'
import { Route as IndexImport } from './../routes/index'
import { Route as ExibirProtocoloNumeroProtocoloImport } from './../routes/exibirProtocolo.$numeroProtocolo'

// Create/Update Routes

const SolicitarProtocoloRoute = SolicitarProtocoloImport.update({
  id: '/solicitarProtocolo',
  path: '/solicitarProtocolo',
  getParentRoute: () => rootRoute,
} as any)

const RecuperarSenhaRoute = RecuperarSenhaImport.update({
  id: '/recuperarSenha',
  path: '/recuperarSenha',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const EmailDeRecuperacaoEnviadoRoute = EmailDeRecuperacaoEnviadoImport.update({
  id: '/emailDeRecuperacaoEnviado',
  path: '/emailDeRecuperacaoEnviado',
  getParentRoute: () => rootRoute,
} as any)

const ConsultarUsuariosRoute = ConsultarUsuariosImport.update({
  id: '/consultarUsuarios',
  path: '/consultarUsuarios',
  getParentRoute: () => rootRoute,
} as any)

const ConsultarProtocolosRoute = ConsultarProtocolosImport.update({
  id: '/consultarProtocolos',
  path: '/consultarProtocolos',
  getParentRoute: () => rootRoute,
} as any)

const CadastroServidorRoute = CadastroServidorImport.update({
  id: '/cadastroServidor',
  path: '/cadastroServidor',
  getParentRoute: () => rootRoute,
} as any)

const CadastroRoute = CadastroImport.update({
  id: '/cadastro',
  path: '/cadastro',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ExibirProtocoloNumeroProtocoloRoute =
  ExibirProtocoloNumeroProtocoloImport.update({
    id: '/exibirProtocolo/$numeroProtocolo',
    path: '/exibirProtocolo/$numeroProtocolo',
    getParentRoute: () => rootRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/cadastro': {
      id: '/cadastro'
      path: '/cadastro'
      fullPath: '/cadastro'
      preLoaderRoute: typeof CadastroImport
      parentRoute: typeof rootRoute
    }
    '/cadastroServidor': {
      id: '/cadastroServidor'
      path: '/cadastroServidor'
      fullPath: '/cadastroServidor'
      preLoaderRoute: typeof CadastroServidorImport
      parentRoute: typeof rootRoute
    }
    '/consultarProtocolos': {
      id: '/consultarProtocolos'
      path: '/consultarProtocolos'
      fullPath: '/consultarProtocolos'
      preLoaderRoute: typeof ConsultarProtocolosImport
      parentRoute: typeof rootRoute
    }
    '/consultarUsuarios': {
      id: '/consultarUsuarios'
      path: '/consultarUsuarios'
      fullPath: '/consultarUsuarios'
      preLoaderRoute: typeof ConsultarUsuariosImport
      parentRoute: typeof rootRoute
    }
    '/emailDeRecuperacaoEnviado': {
      id: '/emailDeRecuperacaoEnviado'
      path: '/emailDeRecuperacaoEnviado'
      fullPath: '/emailDeRecuperacaoEnviado'
      preLoaderRoute: typeof EmailDeRecuperacaoEnviadoImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/recuperarSenha': {
      id: '/recuperarSenha'
      path: '/recuperarSenha'
      fullPath: '/recuperarSenha'
      preLoaderRoute: typeof RecuperarSenhaImport
      parentRoute: typeof rootRoute
    }
    '/solicitarProtocolo': {
      id: '/solicitarProtocolo'
      path: '/solicitarProtocolo'
      fullPath: '/solicitarProtocolo'
      preLoaderRoute: typeof SolicitarProtocoloImport
      parentRoute: typeof rootRoute
    }
    '/exibirProtocolo/$numeroProtocolo': {
      id: '/exibirProtocolo/$numeroProtocolo'
      path: '/exibirProtocolo/$numeroProtocolo'
      fullPath: '/exibirProtocolo/$numeroProtocolo'
      preLoaderRoute: typeof ExibirProtocoloNumeroProtocoloImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/cadastro': typeof CadastroRoute
  '/cadastroServidor': typeof CadastroServidorRoute
  '/consultarProtocolos': typeof ConsultarProtocolosRoute
  '/consultarUsuarios': typeof ConsultarUsuariosRoute
  '/emailDeRecuperacaoEnviado': typeof EmailDeRecuperacaoEnviadoRoute
  '/login': typeof LoginRoute
  '/recuperarSenha': typeof RecuperarSenhaRoute
  '/solicitarProtocolo': typeof SolicitarProtocoloRoute
  '/exibirProtocolo/$numeroProtocolo': typeof ExibirProtocoloNumeroProtocoloRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/cadastro': typeof CadastroRoute
  '/cadastroServidor': typeof CadastroServidorRoute
  '/consultarProtocolos': typeof ConsultarProtocolosRoute
  '/consultarUsuarios': typeof ConsultarUsuariosRoute
  '/emailDeRecuperacaoEnviado': typeof EmailDeRecuperacaoEnviadoRoute
  '/login': typeof LoginRoute
  '/recuperarSenha': typeof RecuperarSenhaRoute
  '/solicitarProtocolo': typeof SolicitarProtocoloRoute
  '/exibirProtocolo/$numeroProtocolo': typeof ExibirProtocoloNumeroProtocoloRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/cadastro': typeof CadastroRoute
  '/cadastroServidor': typeof CadastroServidorRoute
  '/consultarProtocolos': typeof ConsultarProtocolosRoute
  '/consultarUsuarios': typeof ConsultarUsuariosRoute
  '/emailDeRecuperacaoEnviado': typeof EmailDeRecuperacaoEnviadoRoute
  '/login': typeof LoginRoute
  '/recuperarSenha': typeof RecuperarSenhaRoute
  '/solicitarProtocolo': typeof SolicitarProtocoloRoute
  '/exibirProtocolo/$numeroProtocolo': typeof ExibirProtocoloNumeroProtocoloRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/cadastro'
    | '/cadastroServidor'
    | '/consultarProtocolos'
    | '/consultarUsuarios'
    | '/emailDeRecuperacaoEnviado'
    | '/login'
    | '/recuperarSenha'
    | '/solicitarProtocolo'
    | '/exibirProtocolo/$numeroProtocolo'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/cadastro'
    | '/cadastroServidor'
    | '/consultarProtocolos'
    | '/consultarUsuarios'
    | '/emailDeRecuperacaoEnviado'
    | '/login'
    | '/recuperarSenha'
    | '/solicitarProtocolo'
    | '/exibirProtocolo/$numeroProtocolo'
  id:
    | '__root__'
    | '/'
    | '/cadastro'
    | '/cadastroServidor'
    | '/consultarProtocolos'
    | '/consultarUsuarios'
    | '/emailDeRecuperacaoEnviado'
    | '/login'
    | '/recuperarSenha'
    | '/solicitarProtocolo'
    | '/exibirProtocolo/$numeroProtocolo'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  CadastroRoute: typeof CadastroRoute
  CadastroServidorRoute: typeof CadastroServidorRoute
  ConsultarProtocolosRoute: typeof ConsultarProtocolosRoute
  ConsultarUsuariosRoute: typeof ConsultarUsuariosRoute
  EmailDeRecuperacaoEnviadoRoute: typeof EmailDeRecuperacaoEnviadoRoute
  LoginRoute: typeof LoginRoute
  RecuperarSenhaRoute: typeof RecuperarSenhaRoute
  SolicitarProtocoloRoute: typeof SolicitarProtocoloRoute
  ExibirProtocoloNumeroProtocoloRoute: typeof ExibirProtocoloNumeroProtocoloRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  CadastroRoute: CadastroRoute,
  CadastroServidorRoute: CadastroServidorRoute,
  ConsultarProtocolosRoute: ConsultarProtocolosRoute,
  ConsultarUsuariosRoute: ConsultarUsuariosRoute,
  EmailDeRecuperacaoEnviadoRoute: EmailDeRecuperacaoEnviadoRoute,
  LoginRoute: LoginRoute,
  RecuperarSenhaRoute: RecuperarSenhaRoute,
  SolicitarProtocoloRoute: SolicitarProtocoloRoute,
  ExibirProtocoloNumeroProtocoloRoute: ExibirProtocoloNumeroProtocoloRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/cadastro",
        "/cadastroServidor",
        "/consultarProtocolos",
        "/consultarUsuarios",
        "/emailDeRecuperacaoEnviado",
        "/login",
        "/recuperarSenha",
        "/solicitarProtocolo",
        "/exibirProtocolo/$numeroProtocolo"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/cadastro": {
      "filePath": "cadastro.tsx"
    },
    "/cadastroServidor": {
      "filePath": "cadastroServidor.tsx"
    },
    "/consultarProtocolos": {
      "filePath": "consultarProtocolos.tsx"
    },
    "/consultarUsuarios": {
      "filePath": "consultarUsuarios.tsx"
    },
    "/emailDeRecuperacaoEnviado": {
      "filePath": "emailDeRecuperacaoEnviado.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/recuperarSenha": {
      "filePath": "recuperarSenha.tsx"
    },
    "/solicitarProtocolo": {
      "filePath": "solicitarProtocolo.tsx"
    },
    "/exibirProtocolo/$numeroProtocolo": {
      "filePath": "exibirProtocolo.$numeroProtocolo.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
